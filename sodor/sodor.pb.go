// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: sodor/sodor.proto

package sodor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TaskType_Null  TaskType = 0
	TaskType_TaskType_Shell TaskType = 1
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TaskType_Null",
		1: "TaskType_Shell",
	}
	TaskType_value = map[string]int32{
		"TaskType_Null":  0,
		"TaskType_Shell": 1,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{0}
}

type ScheduleMode int32

const (
	ScheduleMode_ScheduleMode_Null    ScheduleMode = 0
	ScheduleMode_ScheduleMode_None    ScheduleMode = 1
	ScheduleMode_ScheduleMode_Crontab ScheduleMode = 2
)

// Enum value maps for ScheduleMode.
var (
	ScheduleMode_name = map[int32]string{
		0: "ScheduleMode_Null",
		1: "ScheduleMode_None",
		2: "ScheduleMode_Crontab",
	}
	ScheduleMode_value = map[string]int32{
		"ScheduleMode_Null":    0,
		"ScheduleMode_None":    1,
		"ScheduleMode_Crontab": 2,
	}
)

func (x ScheduleMode) Enum() *ScheduleMode {
	p := new(ScheduleMode)
	*p = x
	return p
}

func (x ScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[1].Descriptor()
}

func (ScheduleMode) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[1]
}

func (x ScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleMode.Descriptor instead.
func (ScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{1}
}

type HostType int32

const (
	HostType_HostType_Null HostType = 0
	HostType_HostType_IP   HostType = 1
)

// Enum value maps for HostType.
var (
	HostType_name = map[int32]string{
		0: "HostType_Null",
		1: "HostType_IP",
	}
	HostType_value = map[string]int32{
		"HostType_Null": 0,
		"HostType_IP":   1,
	}
)

func (x HostType) Enum() *HostType {
	p := new(HostType)
	*p = x
	return p
}

func (x HostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostType) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[2].Descriptor()
}

func (HostType) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[2]
}

func (x HostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostType.Descriptor instead.
func (HostType) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{2}
}

// thomas
type ThomasType int32

const (
	ThomasType_Thomas_Null    ThomasType = 0
	ThomasType_Thomas_Static  ThomasType = 1
	ThomasType_Thomas_Dynamic ThomasType = 2
)

// Enum value maps for ThomasType.
var (
	ThomasType_name = map[int32]string{
		0: "Thomas_Null",
		1: "Thomas_Static",
		2: "Thomas_Dynamic",
	}
	ThomasType_value = map[string]int32{
		"Thomas_Null":    0,
		"Thomas_Static":  1,
		"Thomas_Dynamic": 2,
	}
)

func (x ThomasType) Enum() *ThomasType {
	p := new(ThomasType)
	*p = x
	return p
}

func (x ThomasType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThomasType) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[3].Descriptor()
}

func (ThomasType) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[3]
}

func (x ThomasType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThomasType.Descriptor instead.
func (ThomasType) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{3}
}

type AlertPluginParamType int32

const (
	AlertPluginParamType_APPT_String  AlertPluginParamType = 0
	AlertPluginParamType_APPT_Integer AlertPluginParamType = 1
)

// Enum value maps for AlertPluginParamType.
var (
	AlertPluginParamType_name = map[int32]string{
		0: "APPT_String",
		1: "APPT_Integer",
	}
	AlertPluginParamType_value = map[string]int32{
		"APPT_String":  0,
		"APPT_Integer": 1,
	}
)

func (x AlertPluginParamType) Enum() *AlertPluginParamType {
	p := new(AlertPluginParamType)
	*p = x
	return p
}

func (x AlertPluginParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertPluginParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[4].Descriptor()
}

func (AlertPluginParamType) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[4]
}

func (x AlertPluginParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertPluginParamType.Descriptor instead.
func (AlertPluginParamType) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{4}
}

type AlertPluginName int32

const (
	AlertPluginName_APN_DingDing AlertPluginName = 0
)

// Enum value maps for AlertPluginName.
var (
	AlertPluginName_name = map[int32]string{
		0: "APN_DingDing",
	}
	AlertPluginName_value = map[string]int32{
		"APN_DingDing": 0,
	}
)

func (x AlertPluginName) Enum() *AlertPluginName {
	p := new(AlertPluginName)
	*p = x
	return p
}

func (x AlertPluginName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertPluginName) Descriptor() protoreflect.EnumDescriptor {
	return file_sodor_sodor_proto_enumTypes[5].Descriptor()
}

func (AlertPluginName) Type() protoreflect.EnumType {
	return &file_sodor_sodor_proto_enumTypes[5]
}

func (x AlertPluginName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertPluginName.Descriptor instead.
func (AlertPluginName) EnumDescriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{5}
}

type JobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JobReply) Reset() {
	*x = JobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReply) ProtoMessage() {}

func (x *JobReply) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReply.ProtoReflect.Descriptor instead.
func (*JobReply) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{0}
}

func (x *JobReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{1}
}

type RoutineSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtSpec string `protobuf:"bytes,1,opt,name=ct_spec,json=ctSpec,proto3" json:"ct_spec,omitempty"`
}

func (x *RoutineSpec) Reset() {
	*x = RoutineSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineSpec) ProtoMessage() {}

func (x *RoutineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineSpec.ProtoReflect.Descriptor instead.
func (*RoutineSpec) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{2}
}

func (x *RoutineSpec) GetCtSpec() string {
	if x != nil {
		return x.CtSpec
	}
	return ""
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type HostType `protobuf:"varint,1,opt,name=type,proto3,enum=HostType" json:"type,omitempty"`
	Node string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{3}
}

func (x *Host) GetType() HostType {
	if x != nil {
		return x.Type
	}
	return HostType_HostType_Null
}

func (x *Host) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt     int32    `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt     int32    `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	JobId        int32    `protobuf:"varint,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Name         string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	RunningHosts []*Host  `protobuf:"bytes,6,rep,name=running_hosts,json=runningHosts,proto3" json:"running_hosts,omitempty"`
	Type         TaskType `protobuf:"varint,7,opt,name=type,proto3,enum=TaskType" json:"type,omitempty"`
	Script       string   `protobuf:"bytes,8,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{4}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Task) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Task) GetJobId() int32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetRunningHosts() []*Host {
	if x != nil {
		return x.RunningHosts
	}
	return nil
}

func (x *Task) GetType() TaskType {
	if x != nil {
		return x.Type
	}
	return TaskType_TaskType_Null
}

func (x *Task) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt     int32           `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt     int32           `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Name         string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ScheduleMode ScheduleMode    `protobuf:"varint,5,opt,name=schedule_mode,json=scheduleMode,proto3,enum=ScheduleMode" json:"schedule_mode,omitempty"`
	RoutineSpec  *RoutineSpec    `protobuf:"bytes,6,opt,name=routine_spec,json=routineSpec,proto3" json:"routine_spec,omitempty"`
	Tasks        []*Task         `protobuf:"bytes,7,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Relations    []*TaskRelation `protobuf:"bytes,8,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{5}
}

func (x *Job) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Job) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Job) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetScheduleMode() ScheduleMode {
	if x != nil {
		return x.ScheduleMode
	}
	return ScheduleMode_ScheduleMode_Null
}

func (x *Job) GetRoutineSpec() *RoutineSpec {
	if x != nil {
		return x.RoutineSpec
	}
	return nil
}

func (x *Job) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Job) GetRelations() []*TaskRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type Jobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *Jobs) Reset() {
	*x = Jobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jobs) ProtoMessage() {}

func (x *Jobs) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jobs.ProtoReflect.Descriptor instead.
func (*Jobs) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{6}
}

func (x *Jobs) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type TaskRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromTask string `protobuf:"bytes,1,opt,name=from_task,json=fromTask,proto3" json:"from_task,omitempty"`
	ToTask   string `protobuf:"bytes,2,opt,name=to_task,json=toTask,proto3" json:"to_task,omitempty"`
}

func (x *TaskRelation) Reset() {
	*x = TaskRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRelation) ProtoMessage() {}

func (x *TaskRelation) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRelation.ProtoReflect.Descriptor instead.
func (*TaskRelation) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{7}
}

func (x *TaskRelation) GetFromTask() string {
	if x != nil {
		return x.FromTask
	}
	return ""
}

func (x *TaskRelation) GetToTask() string {
	if x != nil {
		return x.ToTask
	}
	return ""
}

type JobInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt   int32  `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt   int32  `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	JobId      int32  `protobuf:"varint,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ScheduleTs int32  `protobuf:"varint,5,opt,name=schedule_ts,json=scheduleTs,proto3" json:"schedule_ts,omitempty"`
	StartTs    int32  `protobuf:"varint,6,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	StopTs     int32  `protobuf:"varint,7,opt,name=stop_ts,json=stopTs,proto3" json:"stop_ts,omitempty"`
	ExitCode   int32  `protobuf:"varint,8,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	ExitMsg    string `protobuf:"bytes,9,opt,name=exit_msg,json=exitMsg,proto3" json:"exit_msg,omitempty"`
}

func (x *JobInstance) Reset() {
	*x = JobInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInstance) ProtoMessage() {}

func (x *JobInstance) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInstance.ProtoReflect.Descriptor instead.
func (*JobInstance) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{8}
}

func (x *JobInstance) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobInstance) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *JobInstance) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *JobInstance) GetJobId() int32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobInstance) GetScheduleTs() int32 {
	if x != nil {
		return x.ScheduleTs
	}
	return 0
}

func (x *JobInstance) GetStartTs() int32 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *JobInstance) GetStopTs() int32 {
	if x != nil {
		return x.StopTs
	}
	return 0
}

func (x *JobInstance) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *JobInstance) GetExitMsg() string {
	if x != nil {
		return x.ExitMsg
	}
	return ""
}

type JobInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstances []*JobInstance `protobuf:"bytes,1,rep,name=job_instances,json=jobInstances,proto3" json:"job_instances,omitempty"`
}

func (x *JobInstances) Reset() {
	*x = JobInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInstances) ProtoMessage() {}

func (x *JobInstances) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInstances.ProtoReflect.Descriptor instead.
func (*JobInstances) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{9}
}

func (x *JobInstances) GetJobInstances() []*JobInstance {
	if x != nil {
		return x.JobInstances
	}
	return nil
}

type TaskInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt      int32            `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt      int32            `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	JobId         int32            `protobuf:"varint,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId        int32            `protobuf:"varint,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JobInstanceId int32            `protobuf:"varint,6,opt,name=job_instance_id,json=jobInstanceId,proto3" json:"job_instance_id,omitempty"`
	StartTs       int32            `protobuf:"varint,7,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	StopTs        int32            `protobuf:"varint,8,opt,name=stop_ts,json=stopTs,proto3" json:"stop_ts,omitempty"`
	Host          string           `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`
	Pid           int32            `protobuf:"varint,10,opt,name=pid,proto3" json:"pid,omitempty"`
	ExitCode      int32            `protobuf:"varint,11,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	ExitMsg       string           `protobuf:"bytes,12,opt,name=exit_msg,json=exitMsg,proto3" json:"exit_msg,omitempty"`
	OutputVars    *structpb.Struct `protobuf:"bytes,13,opt,name=output_vars,json=outputVars,proto3" json:"output_vars,omitempty"`
}

func (x *TaskInstance) Reset() {
	*x = TaskInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInstance) ProtoMessage() {}

func (x *TaskInstance) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInstance.ProtoReflect.Descriptor instead.
func (*TaskInstance) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{10}
}

func (x *TaskInstance) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskInstance) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *TaskInstance) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *TaskInstance) GetJobId() int32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *TaskInstance) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskInstance) GetJobInstanceId() int32 {
	if x != nil {
		return x.JobInstanceId
	}
	return 0
}

func (x *TaskInstance) GetStartTs() int32 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *TaskInstance) GetStopTs() int32 {
	if x != nil {
		return x.StopTs
	}
	return 0
}

func (x *TaskInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TaskInstance) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *TaskInstance) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskInstance) GetExitMsg() string {
	if x != nil {
		return x.ExitMsg
	}
	return ""
}

func (x *TaskInstance) GetOutputVars() *structpb.Struct {
	if x != nil {
		return x.OutputVars
	}
	return nil
}

type TaskInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInstances []*TaskInstance `protobuf:"bytes,1,rep,name=task_instances,json=taskInstances,proto3" json:"task_instances,omitempty"`
}

func (x *TaskInstances) Reset() {
	*x = TaskInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInstances) ProtoMessage() {}

func (x *TaskInstances) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInstances.ProtoReflect.Descriptor instead.
func (*TaskInstances) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{11}
}

func (x *TaskInstances) GetTaskInstances() []*TaskInstance {
	if x != nil {
		return x.TaskInstances
	}
	return nil
}

type JobTaskInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstances  *JobInstances  `protobuf:"bytes,1,opt,name=job_instances,json=jobInstances,proto3" json:"job_instances,omitempty"`
	TaskInstances *TaskInstances `protobuf:"bytes,2,opt,name=task_instances,json=taskInstances,proto3" json:"task_instances,omitempty"`
}

func (x *JobTaskInstances) Reset() {
	*x = JobTaskInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTaskInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTaskInstances) ProtoMessage() {}

func (x *JobTaskInstances) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTaskInstances.ProtoReflect.Descriptor instead.
func (*JobTaskInstances) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{12}
}

func (x *JobTaskInstances) GetJobInstances() *JobInstances {
	if x != nil {
		return x.JobInstances
	}
	return nil
}

func (x *JobTaskInstances) GetTaskInstances() *TaskInstances {
	if x != nil {
		return x.TaskInstances
	}
	return nil
}

// fat_ctrl
type FatCtrlInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt int32  `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt int32  `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Version  string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Proto    string `protobuf:"bytes,6,opt,name=proto,proto3" json:"proto,omitempty"`
	Host     string `protobuf:"bytes,7,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *FatCtrlInfo) Reset() {
	*x = FatCtrlInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FatCtrlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FatCtrlInfo) ProtoMessage() {}

func (x *FatCtrlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FatCtrlInfo.ProtoReflect.Descriptor instead.
func (*FatCtrlInfo) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{13}
}

func (x *FatCtrlInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FatCtrlInfo) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *FatCtrlInfo) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *FatCtrlInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FatCtrlInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FatCtrlInfo) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *FatCtrlInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FatCtrlInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type FatCtrlInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatCtrlInfos []*FatCtrlInfo `protobuf:"bytes,1,rep,name=fat_ctrl_infos,json=fatCtrlInfos,proto3" json:"fat_ctrl_infos,omitempty"`
}

func (x *FatCtrlInfos) Reset() {
	*x = FatCtrlInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FatCtrlInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FatCtrlInfos) ProtoMessage() {}

func (x *FatCtrlInfos) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FatCtrlInfos.ProtoReflect.Descriptor instead.
func (*FatCtrlInfos) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{14}
}

func (x *FatCtrlInfos) GetFatCtrlInfos() []*FatCtrlInfo {
	if x != nil {
		return x.FatCtrlInfos
	}
	return nil
}

type ThomasInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThomasInfos []*ThomasInfo `protobuf:"bytes,1,rep,name=thomas_infos,json=thomasInfos,proto3" json:"thomas_infos,omitempty"`
}

func (x *ThomasInfos) Reset() {
	*x = ThomasInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThomasInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThomasInfos) ProtoMessage() {}

func (x *ThomasInfos) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThomasInfos.ProtoReflect.Descriptor instead.
func (*ThomasInfos) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{15}
}

func (x *ThomasInfos) GetThomasInfos() []*ThomasInfo {
	if x != nil {
		return x.ThomasInfos
	}
	return nil
}

type ThomasInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt      int32            `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt      int32            `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Name          string           `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Version       string           `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Proto         string           `protobuf:"bytes,6,opt,name=proto,proto3" json:"proto,omitempty"`
	Host          string           `protobuf:"bytes,7,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32            `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	Pid           int32            `protobuf:"varint,9,opt,name=pid,proto3" json:"pid,omitempty"`
	StartTime     int32            `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	HeartBeatTime int32            `protobuf:"varint,11,opt,name=heart_beat_time,json=heartBeatTime,proto3" json:"heart_beat_time,omitempty"`
	ThomasType    ThomasType       `protobuf:"varint,12,opt,name=thomas_type,json=thomasType,proto3,enum=ThomasType" json:"thomas_type,omitempty"`
	Status        string           `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	LatestMetrics *structpb.Struct `protobuf:"bytes,14,opt,name=latest_metrics,json=latestMetrics,proto3" json:"latest_metrics,omitempty"`
}

func (x *ThomasInfo) Reset() {
	*x = ThomasInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThomasInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThomasInfo) ProtoMessage() {}

func (x *ThomasInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThomasInfo.ProtoReflect.Descriptor instead.
func (*ThomasInfo) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{16}
}

func (x *ThomasInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThomasInfo) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *ThomasInfo) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *ThomasInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThomasInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ThomasInfo) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *ThomasInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ThomasInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ThomasInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ThomasInfo) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ThomasInfo) GetHeartBeatTime() int32 {
	if x != nil {
		return x.HeartBeatTime
	}
	return 0
}

func (x *ThomasInfo) GetThomasType() ThomasType {
	if x != nil {
		return x.ThomasType
	}
	return ThomasType_Thomas_Null
}

func (x *ThomasInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ThomasInfo) GetLatestMetrics() *structpb.Struct {
	if x != nil {
		return x.LatestMetrics
	}
	return nil
}

type ThomasInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThomasInstances []*ThomasInstance `protobuf:"bytes,1,rep,name=thomas_instances,json=thomasInstances,proto3" json:"thomas_instances,omitempty"`
}

func (x *ThomasInstances) Reset() {
	*x = ThomasInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThomasInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThomasInstances) ProtoMessage() {}

func (x *ThomasInstances) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThomasInstances.ProtoReflect.Descriptor instead.
func (*ThomasInstances) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{17}
}

func (x *ThomasInstances) GetThomasInstances() []*ThomasInstance {
	if x != nil {
		return x.ThomasInstances
	}
	return nil
}

type ThomasInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thomas  *ThomasInfo      `protobuf:"bytes,1,opt,name=thomas,proto3" json:"thomas,omitempty"`
	Metrics []*ThomasMetrics `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ThomasInstance) Reset() {
	*x = ThomasInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThomasInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThomasInstance) ProtoMessage() {}

func (x *ThomasInstance) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThomasInstance.ProtoReflect.Descriptor instead.
func (*ThomasInstance) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{18}
}

func (x *ThomasInstance) GetThomas() *ThomasInfo {
	if x != nil {
		return x.Thomas
	}
	return nil
}

func (x *ThomasInstance) GetMetrics() []*ThomasMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ThomasMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt int32            `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt int32            `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Metrics  *structpb.Struct `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ThomasMetrics) Reset() {
	*x = ThomasMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThomasMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThomasMetrics) ProtoMessage() {}

func (x *ThomasMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThomasMetrics.ProtoReflect.Descriptor instead.
func (*ThomasMetrics) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{19}
}

func (x *ThomasMetrics) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThomasMetrics) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *ThomasMetrics) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *ThomasMetrics) GetMetrics() *structpb.Struct {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// alert
type AlertGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt int32  `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt int32  `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// golang: map[string]map[string]interface{}
	PluginParams *structpb.Struct `protobuf:"bytes,5,opt,name=plugin_params,json=pluginParams,proto3" json:"plugin_params,omitempty"`
}

func (x *AlertGroup) Reset() {
	*x = AlertGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertGroup) ProtoMessage() {}

func (x *AlertGroup) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertGroup.ProtoReflect.Descriptor instead.
func (*AlertGroup) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{20}
}

func (x *AlertGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertGroup) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *AlertGroup) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *AlertGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertGroup) GetPluginParams() *structpb.Struct {
	if x != nil {
		return x.PluginParams
	}
	return nil
}

type AlertPluginParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   AlertPluginParamType `protobuf:"varint,2,opt,name=type,proto3,enum=AlertPluginParamType" json:"type,omitempty"`
	DescEn string               `protobuf:"bytes,3,opt,name=desc_en,json=descEn,proto3" json:"desc_en,omitempty"`
}

func (x *AlertPluginParams) Reset() {
	*x = AlertPluginParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertPluginParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertPluginParams) ProtoMessage() {}

func (x *AlertPluginParams) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertPluginParams.ProtoReflect.Descriptor instead.
func (*AlertPluginParams) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{21}
}

func (x *AlertPluginParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertPluginParams) GetType() AlertPluginParamType {
	if x != nil {
		return x.Type
	}
	return AlertPluginParamType_APPT_String
}

func (x *AlertPluginParams) GetDescEn() string {
	if x != nil {
		return x.DescEn
	}
	return ""
}

type AlertPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params *AlertPluginParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AlertPlugin) Reset() {
	*x = AlertPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertPlugin) ProtoMessage() {}

func (x *AlertPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertPlugin.ProtoReflect.Descriptor instead.
func (*AlertPlugin) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{22}
}

func (x *AlertPlugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertPlugin) GetParams() *AlertPluginParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type AlertHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt    int32            `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt    int32            `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	GroupId     int32            `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	PluginName  string           `protobuf:"bytes,5,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	PluginValue *structpb.Struct `protobuf:"bytes,6,opt,name=plugin_value,json=pluginValue,proto3" json:"plugin_value,omitempty"`
}

func (x *AlertHistory) Reset() {
	*x = AlertHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sodor_sodor_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertHistory) ProtoMessage() {}

func (x *AlertHistory) ProtoReflect() protoreflect.Message {
	mi := &file_sodor_sodor_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertHistory.ProtoReflect.Descriptor instead.
func (*AlertHistory) Descriptor() ([]byte, []int) {
	return file_sodor_sodor_proto_rawDescGZIP(), []int{23}
}

func (x *AlertHistory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertHistory) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *AlertHistory) GetUpdateAt() int32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *AlertHistory) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AlertHistory) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *AlertHistory) GetPluginValue() *structpb.Struct {
	if x != nil {
		return x.PluginValue
	}
	return nil
}

var File_sodor_sodor_proto protoreflect.FileDescriptor

var file_sodor_sodor_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x6f, 0x64, 0x6f, 0x72, 0x2f, 0x73, 0x6f, 0x64, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0f, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0x39, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x22, 0xde, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x0c, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0c,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x20, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12,
	0x18, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x44, 0x0a, 0x0c, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x22,
	0xfb, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x41, 0x0a,
	0x0c, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0xfc, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78,
	0x69, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x69, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x76, 0x61, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x72, 0x73, 0x22,
	0x45, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x46, 0x61, 0x74, 0x43, 0x74, 0x72,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x42, 0x0a, 0x0c, 0x46,
	0x61, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x0e, 0x66,
	0x61, 0x74, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x61, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x66, 0x61, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x3d, 0x0a, 0x0b, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2e,
	0x0a, 0x0c, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xa1,
	0x03, 0x0a, 0x0a, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0b,
	0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x10, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x0f, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x5f, 0x0a, 0x0e, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x74, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x68, 0x6f, 0x6d,
	0x61, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x31,
	0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x11,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x63, 0x45, 0x6e, 0x22, 0x4d, 0x0a, 0x0b, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x31, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x4e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x2a, 0x56,
	0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x72, 0x6f,
	0x6e, 0x74, 0x61, 0x62, 0x10, 0x02, 0x2a, 0x2e, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x49, 0x50, 0x10, 0x01, 0x2a, 0x44, 0x0a, 0x0a, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x5f, 0x4e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x68, 0x6f, 0x6d, 0x61, 0x73, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x68, 0x6f, 0x6d,
	0x61, 0x73, 0x5f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x10, 0x02, 0x2a, 0x39, 0x0a, 0x14,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x54, 0x5f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x50, 0x54, 0x5f, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x23, 0x0a, 0x0f, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50,
	0x4e, 0x5f, 0x44, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x42, 0x20, 0x5a, 0x1e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x61, 0x62, 0x79, 0x53,
	0x69, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x64, 0x6f, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sodor_sodor_proto_rawDescOnce sync.Once
	file_sodor_sodor_proto_rawDescData = file_sodor_sodor_proto_rawDesc
)

func file_sodor_sodor_proto_rawDescGZIP() []byte {
	file_sodor_sodor_proto_rawDescOnce.Do(func() {
		file_sodor_sodor_proto_rawDescData = protoimpl.X.CompressGZIP(file_sodor_sodor_proto_rawDescData)
	})
	return file_sodor_sodor_proto_rawDescData
}

var file_sodor_sodor_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_sodor_sodor_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_sodor_sodor_proto_goTypes = []interface{}{
	(TaskType)(0),             // 0: TaskType
	(ScheduleMode)(0),         // 1: ScheduleMode
	(HostType)(0),             // 2: HostType
	(ThomasType)(0),           // 3: ThomasType
	(AlertPluginParamType)(0), // 4: AlertPluginParamType
	(AlertPluginName)(0),      // 5: AlertPluginName
	(*JobReply)(nil),          // 6: JobReply
	(*EmptyResponse)(nil),     // 7: EmptyResponse
	(*RoutineSpec)(nil),       // 8: RoutineSpec
	(*Host)(nil),              // 9: Host
	(*Task)(nil),              // 10: Task
	(*Job)(nil),               // 11: Job
	(*Jobs)(nil),              // 12: Jobs
	(*TaskRelation)(nil),      // 13: TaskRelation
	(*JobInstance)(nil),       // 14: JobInstance
	(*JobInstances)(nil),      // 15: JobInstances
	(*TaskInstance)(nil),      // 16: TaskInstance
	(*TaskInstances)(nil),     // 17: TaskInstances
	(*JobTaskInstances)(nil),  // 18: JobTaskInstances
	(*FatCtrlInfo)(nil),       // 19: FatCtrlInfo
	(*FatCtrlInfos)(nil),      // 20: FatCtrlInfos
	(*ThomasInfos)(nil),       // 21: ThomasInfos
	(*ThomasInfo)(nil),        // 22: ThomasInfo
	(*ThomasInstances)(nil),   // 23: ThomasInstances
	(*ThomasInstance)(nil),    // 24: ThomasInstance
	(*ThomasMetrics)(nil),     // 25: ThomasMetrics
	(*AlertGroup)(nil),        // 26: AlertGroup
	(*AlertPluginParams)(nil), // 27: AlertPluginParams
	(*AlertPlugin)(nil),       // 28: AlertPlugin
	(*AlertHistory)(nil),      // 29: AlertHistory
	(*structpb.Struct)(nil),   // 30: google.protobuf.Struct
}
var file_sodor_sodor_proto_depIdxs = []int32{
	2,  // 0: Host.type:type_name -> HostType
	9,  // 1: Task.running_hosts:type_name -> Host
	0,  // 2: Task.type:type_name -> TaskType
	1,  // 3: Job.schedule_mode:type_name -> ScheduleMode
	8,  // 4: Job.routine_spec:type_name -> RoutineSpec
	10, // 5: Job.tasks:type_name -> Task
	13, // 6: Job.relations:type_name -> TaskRelation
	11, // 7: Jobs.jobs:type_name -> Job
	14, // 8: JobInstances.job_instances:type_name -> JobInstance
	30, // 9: TaskInstance.output_vars:type_name -> google.protobuf.Struct
	16, // 10: TaskInstances.task_instances:type_name -> TaskInstance
	15, // 11: JobTaskInstances.job_instances:type_name -> JobInstances
	17, // 12: JobTaskInstances.task_instances:type_name -> TaskInstances
	19, // 13: FatCtrlInfos.fat_ctrl_infos:type_name -> FatCtrlInfo
	22, // 14: ThomasInfos.thomas_infos:type_name -> ThomasInfo
	3,  // 15: ThomasInfo.thomas_type:type_name -> ThomasType
	30, // 16: ThomasInfo.latest_metrics:type_name -> google.protobuf.Struct
	24, // 17: ThomasInstances.thomas_instances:type_name -> ThomasInstance
	22, // 18: ThomasInstance.thomas:type_name -> ThomasInfo
	25, // 19: ThomasInstance.metrics:type_name -> ThomasMetrics
	30, // 20: ThomasMetrics.metrics:type_name -> google.protobuf.Struct
	30, // 21: AlertGroup.plugin_params:type_name -> google.protobuf.Struct
	4,  // 22: AlertPluginParams.type:type_name -> AlertPluginParamType
	27, // 23: AlertPlugin.params:type_name -> AlertPluginParams
	30, // 24: AlertHistory.plugin_value:type_name -> google.protobuf.Struct
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_sodor_sodor_proto_init() }
func file_sodor_sodor_proto_init() {
	if File_sodor_sodor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sodor_sodor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTaskInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FatCtrlInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FatCtrlInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThomasInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThomasInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThomasInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThomasInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThomasMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertPluginParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sodor_sodor_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sodor_sodor_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sodor_sodor_proto_goTypes,
		DependencyIndexes: file_sodor_sodor_proto_depIdxs,
		EnumInfos:         file_sodor_sodor_proto_enumTypes,
		MessageInfos:      file_sodor_sodor_proto_msgTypes,
	}.Build()
	File_sodor_sodor_proto = out.File
	file_sodor_sodor_proto_rawDesc = nil
	file_sodor_sodor_proto_goTypes = nil
	file_sodor_sodor_proto_depIdxs = nil
}
